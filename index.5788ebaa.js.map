{"mappings":"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","sources":["src/js/chroma.js","src/js/render-cards.js","src/js/user-modal.js"],"sourcesContent":["const imgContainers = document.querySelectorAll('.cards-home-movie-image');\n\nimgContainers.forEach(imgContainer => {\n  const backgroundColor = window.getComputedStyle(imgContainer).backgroundColor;\n\n  const brightness = chroma(backgroundColor).luminance();\n\n  const textElement = imgContainer.querySelector('.text-element');\n  if (brightness < 0.5) {\n    textElement.style.color = 'black';\n  } else {\n    textElement.style.color = 'white';\n  }\n});\n","const API_KEY = '4688c8e2a1b74736a6eaf922561496b4';\nlet page = 1;\nconst baseUrl = 'https://api.rawg.io/api/';\nconst list = document.querySelector('.main-gallery');\n\nasync function fetchPopularGames(page) {\n  const url = new URL('games', baseUrl);\n  url.searchParams.append('ordering', '-rating');\n  url.searchParams.append('key', API_KEY);\n  url.searchParams.append('page', page);\n\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching popular games:', error);\n  }\n}\n\nasync function fetchGameTrailers(gameId) {\n  const url = new URL(`games/${gameId}/movies`, baseUrl);\n  url.searchParams.append('key', API_KEY);\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching game trailers:', error);\n  }\n}\n\nasync function fetchGameById(id) {\n  const url = new URL(`games/${id}`, baseUrl);\n  url.searchParams.append('key', API_KEY);\n\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching game with id ${id}:`, error);\n  }\n}\n\nasync function fetchGenres() {\n  const url = new URL('https://api.rawg.io/api/genres');\n  url.searchParams.append('key', API_KEY);\n\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching genres:', error);\n  }\n}\n\nasync function renderGames(games) {\n  list.innerHTML = '';\n\n  for (const game of games) {\n    const {\n      id,\n      name,\n      background_image,\n      genres: gameGenres,\n      tags,\n      rating,\n      added,\n      released,\n      parent_platforms,\n    } = game;\n\n    const containsNSFW = tags.some(tag => tag.name.toLowerCase() === 'nsfw');\n    console.log(game);\n\n    if (containsNSFW) {\n      continue;\n    }\n\n    const img = new Image();\n    img.src = background_image;\n\n    img.onload = async function () {\n      if (this.naturalWidth >= this.naturalHeight) {\n        const genreNames = gameGenres.map(genre => genre.name);\n        const tagNames = tags.map(tag => tag.name);\n        const platformNames = parent_platforms\n          .map(parent_platform => parent_platform.platform.name)\n          .slice(0, 2);\n\n        const trailers = await fetchGameTrailers(id);\n        const screenshots = trailers.results.map(trailer => ({\n          image: trailer.data.max,\n        }));\n\n        const listItem = `\n          <li class=\"card-container\" data-id=\"${id}\">\n            <div class=\"first-content-card\" data-id=\"${id}\" data-title=\"${name}\" data-original_title=\"${name}\">\n              <div class=\"img-content\">\n                  <img class=\"cards-home-game-image\" width=\"310\" height=\"170\" src=\"${background_image}\" alt=\"Poster ${name}\" />\n                <div>\n                <div class=\"stats-cards\">\n                <p class=\"cards-home-game-rating\">${rating}</p>\n                <p class=\"cards-home-game-added\">+ ${added}</p>\n                </div>\n                <span class=\"cards-home-game-title\">${name.toUpperCase()}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"second-content-card\">\n            ${\n              genreNames.length > 0\n                ? `<div class=\"cards-home-game-genres\"><span>Genres:</span> ${genreNames.join(\n                    ', '\n                  )}</div>`\n                : ''\n            }\n            ${\n              released\n                ? `<div class=\"cards-home-game-genres\"><span>Release date:</span> ${released}</div>`\n                : ''\n            }\n            ${\n              platformNames.length > 0\n                ? `<div class=\"cards-home-game-genres\"><span>Platforms:</span> ${platformNames.join(\n                    ', '\n                  )}</div>`\n                : ''\n            }\n              <button class=\"view-details-btn\" data-id=\"${id}\">View Details</button>\n            </div>\n          </li>\n        `;\n\n        list.insertAdjacentHTML('beforeend', listItem);\n\n        document\n          .querySelector(`[data-id=\"${id}\"] .view-details-btn`)\n          .addEventListener('click', async function () {\n            showModal(game);\n          });\n      }\n    };\n  }\n}\n\nfunction showModal(game) {\n  const modalContent = `\n  <div class=\"modal-content\">\n    <span class=\"close\">&times;</span>\n\n    <h2>${game.name}</h2>\n    <div>\n      <img src=\"${game.background_image}\" height=\"200\" alt=\"Poster ${\n    game.name\n  }\" />\n      <div class=\"stats-modal\">\n        <ul class=\"buttons-modal\">\n          <li><button>Add to <span>Wishlist</span></button></li>\n          <li><button>Add to my <span>games</span></button></li>\n        </ul>\n        <div class=\"stats-modal-styles\">\n          <p>Rating: <span>${game.rating}</span></p>\n          <p>Added: <span>${game.added}</span></p>\n        </div>\n        ${\n          game.genres.length > 0\n            ? `<p>Genres: <span>${game.genres\n                .map(genre => genre.name)\n                .join(', ')}</span></p>`\n            : ''\n        }\n        ${\n          game.tags.length > 0\n            ? `<p>Tags: <span>${game.tags\n                .map(tag => tag.name)\n                .join(', ')}</span></p>`\n            : ''\n        }\n\n        <div class=\"slider\" id=\"slider-${game.id}\">\n          ${game.short_screenshots\n            .map(\n              screenshot =>\n                `<img src=\"${screenshot.image}\" alt=\"Screenshot\" width=\"300\" />`\n            )\n            .join('')}\n        </div>\n      </div>\n    </div>\n  </div>\n  `;\n\n  document.querySelector('.modal').innerHTML = modalContent;\n  document.querySelector('.modal').style.display = 'block';\n\n  const closeModalButton = document.querySelector('.modal-content .close');\n  closeModalButton.addEventListener('click', closeModal);\n}\n\nfunction closeModal() {\n  document.querySelector('.modal').style.display = 'none';\n}\n\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n});\n\nfetchPopularGames(page)\n  .then(res => res.results)\n  .then(renderGames)\n  .catch(error => console.error('Error fetching popular games:', error));\n","const userModal = document.querySelector('#userModal');\nconst userIcon = document.querySelector('.user-icon');\n\nuserIcon.addEventListener('click', e => {\n  userModal.style.display = 'block';\n});\n\nconst closeButton = userModal.querySelector('.user-modal-close');\ncloseButton.addEventListener('click', e => {\n  userModal.style.display = 'none';\n});\n"],"names":["document","querySelectorAll","forEach","imgContainer","backgroundColor","window","getComputedStyle","brightness","chroma","luminance","textElement","querySelector","style","color","$13315e1086e5db7e$var$list","async","$13315e1086e5db7e$var$fetchGameTrailers","gameId","url","URL","searchParams","append","response","fetch","json","error","console","$13315e1086e5db7e$var$showModal","game","modalContent","name","background_image","rating","added","genres","length","map","genre","join","tags","tag","id","short_screenshots","screenshot","image","innerHTML","display","addEventListener","$13315e1086e5db7e$var$closeModal","event","key","page1","res","$13315e1086e5db7e$var$fetchPopularGames","then","results","games","gameGenres","released","parent_platforms","containsNSFW","some","toLowerCase","log","img","Image","src","onload","this","naturalWidth","naturalHeight","genreNames","platformNames","parent_platform","platform","slice","listItem","trailer","data","max","toUpperCase","insertAdjacentHTML","catch","$d133b2eae9e0f1f1$var$userModal","e"],"version":3,"file":"index.5788ebaa.js.map"}